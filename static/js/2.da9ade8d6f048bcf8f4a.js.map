{"version":3,"sources":["webpack:///src/pages/CSS/css_syntax.vue","webpack:///./src/pages/CSS/css_syntax.vue?9aa4","webpack:///./src/pages/CSS/css_syntax.vue"],"names":["css_syntax","name","components","CssCode","data","html","mounted","this","methods","CSS_css_syntax","render","_h","$createElement","_c","_self","attrs","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8HAUAA,GACAC,KAAA,aACAC,YACAC,kBAAA,GAEAC,KALA,WAMA,OACAC,UAGAC,QAVA,WAWAC,KAAAF,MACA,gBACA,kCACA,2DACA,0BACA,mBACA,+DACA,iDACA,sDACA,IACA,YACA,sCACA,wBACA,2BACA,qBACA,uBACA,6BACA,gCACA,yGACA,IACA,QACA,uBACA,iCACA,IACA,QACA,oKACA,oCACA,qCACA,MACA,wBACA,kBACA,wBACA,IACA,IACA,SACA,uDACA,SACA,iBACA,sBACA,eACA,gBACA,2CACA,IACA,0GACA,WAGAG,YCjEeC,GADEC,OAFjB,WAA0B,IAAaC,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,OAAOV,KAAtGE,KAAsGF,QAAiBQ,EAAA,cAEhIG,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEnB,EACAS,GATF,EAVA,SAAAW,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/2.da9ade8d6f048bcf8f4a.js","sourcesContent":["<template>\r\n  <div>\r\n    <css-code :html=\"html\">\r\n      <div></div>\r\n    </css-code>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CssCode from \"@/components/CSS/code.vue\";\r\nexport default {\r\n  name: \"css_syntax\",\r\n  components: {\r\n    CssCode\r\n  },\r\n  data() {\r\n    return {\r\n      html: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.html = [\r\n      \"<!--CSS 语法\",\r\n      \"CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明。\",\r\n      \"selector {declaration1; declaration2; ... declarationN }\",\r\n      \"选择器通常是您需要改变样式的 HTML 元素。\",\r\n      \"每条声明由一个属性和一个值组成。\",\r\n      \"属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。\",\r\n      \"下面这行代码的作用是将 h1 元素内的文字颜色定义为红色，同时将字体大小设置为 14 像素。\",\r\n      \"在这个例子中，h1 是选择器，color 和 font-size 是属性，red 和 14px 是值。\",\r\n      \" \",\r\n      \"值的不同写法和单位\",\r\n      \"除了英文单词 red，我们还可以使用十六进制的颜色值 #ff0000：\",\r\n      \"p { color: #ff0000; }\",\r\n      \"为了节约字节，我们可以使用 CSS 的缩写形式：\",\r\n      \"p { color: #f00; }\",\r\n      \"我们还可以通过两种方法使用 RGB 值：\",\r\n      \"p { color: rgb(255,0,0); }\",\r\n      \"p { color: rgb(100%,0%,0%); }\",\r\n      \"请注意，当使用 RGB 百分比时，即使当值为 0 时也要写百分比符号。但是在其他的情况下就不需要这么做了。比如说，当尺寸为 0 像素时，0 之后不需要使用 px 单位，因为 0 就是 0，无论单位是什么。\",\r\n      \" \",\r\n      \"记得写引号\",\r\n      \"提示：如果值为若干单词，则要给值加引号：\",\r\n      \"p {font-family: 'sans serif';}\",\r\n      \" \",\r\n      \"多重声明：\",\r\n      \"提示：如果要定义不止一个声明，则需要用分号将每个声明分开。下面的例子展示出如何定义一个红色文字的居中段落。最后一条规则是不需要加分号的，因为分号在英语中是一个分隔符号，不是结束符号。然而，大多数有经验的设计师会在每条声明的末尾都加上分号，这么做的好处是，当你从现有的规则中增减声明时，会尽可能地减少出错的可能性。就像这样：\",\r\n      \"p {text-align:center; color:red;}\",\r\n      \"你应该在每行只描述一个属性，这样可以增强样式定义的可读性，就像这样：\",\r\n      \"p {\",\r\n      \"  text-align: center;\",\r\n      \"  color: black;\",\r\n      \"  font-family: arial;\",\r\n      \"}\",\r\n      \" \",\r\n      \"空格和大小写\",\r\n      \"大多数样式表包含不止一条规则，而大多数规则包含不止一个声明。多重声明和空格的使用使得样式表更容易被编辑：\",\r\n      \"body {\",\r\n      \"  color: #000;\",\r\n      \"  background: #fff;\",\r\n      \"  margin: 0;\",\r\n      \"  padding: 0;\",\r\n      \"  font-family: Georgia, Palatino, serif;\",\r\n      \"}\",\r\n      \"是否包含空格不会影响 CSS 在浏览器的工作效果，同样，与 XHTML 不同，CSS 对大小写不敏感。不过存在一个例外：如果涉及到与 HTML 文档一起工作的话，class 和 id 名称对大小写是敏感的。\",\r\n      \"-->\"\r\n    ];\r\n  },\r\n  methods: {}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.html {\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/CSS/css_syntax.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('css-code',{attrs:{\"html\":_vm.html}},[_c('div')])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ec94db2c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/CSS/css_syntax.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ec94db2c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./css_syntax.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./css_syntax.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./css_syntax.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ec94db2c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./css_syntax.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ec94db2c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/CSS/css_syntax.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}