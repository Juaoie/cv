{"version":3,"sources":["webpack:///src/pages/CSS/css_syntax_pro.vue","webpack:///./src/pages/CSS/css_syntax_pro.vue?4532","webpack:///./src/pages/CSS/css_syntax_pro.vue"],"names":["css_syntax_pro","name","components","CssCode","data","html","mounted","this","methods","CSS_css_syntax_pro","render","_h","$createElement","_c","_self","attrs","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8HAUAA,GACAC,KAAA,iBACAC,YACAC,kBAAA,GAEAC,KALA,WAMA,OACAC,UAGAC,QAVA,WAWAC,KAAAF,MACA,gBACA,wFACA,sBACA,kBACA,IACA,IACA,SACA,6CACA,SACA,sCACA,IACA,wDACA,8JACA,wJACA,IACA,kBACA,mEACA,UACA,sCACA,IACA,mCACA,sCACA,IACA,gFACA,IACA,YACA,wGACA,UACA,sCACA,IACA,oCACA,sCACA,IACA,OACA,kDACA,IACA,WAGAG,YC1DeC,GADEC,OAFjB,WAA0B,IAAaC,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,OAAOV,KAAtGE,KAAsGF,QAAiBQ,EAAA,cAEhIG,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEnB,EACAS,GATF,EAVA,SAAAW,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/9.3f31beb5129535ab3e5c.js","sourcesContent":["<template>\r\n  <div>\r\n    <css-code :html=\"html\" >\r\n      <div></div>\r\n    </css-code>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CssCode from \"@/components/CSS/code.vue\";\r\nexport default {\r\n  name: \"css_syntax_pro\",\r\n  components: {\r\n    CssCode\r\n  },\r\n  data() {\r\n    return {\r\n      html: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.html = [\r\n      \"<!--选择器的分组\",\r\n      \"你可以对选择器进行分组，这样，被分组的选择器就可以分享相同的声明。用逗号将需要分组的选择器分开。在下面的例子中，我们对所有的标题元素进行了分组。所有的标题元素都是绿色的。\",\r\n      \"h1,h2,h3,h4,h5,h6 {\",\r\n      \"  color: green;\",\r\n      \"}\",\r\n      \" \",\r\n      \"继承及其问题\",\r\n      \"根据 CSS，子元素从父元素继承属性。但是它并不总是按此方式工作。看看下面这条规则：\",\r\n      \"body {\",\r\n      \"  font-family: Verdana, sans-serif;\",\r\n      \"}\",\r\n      \"根据上面这条规则，站点的 body 元素将使用 Verdana 字体（假如访问者的系统中存在该字体的话）。\",\r\n      \"通过 CSS 继承，子元素将继承最高级元素（在本例中是 body）所拥有的属性（这些子元素诸如 p, td, ul, ol, ul, li, dl, dt,和 dd）。不需要另外的规则，所有 body 的子元素都应该显示 Verdana 字体，子元素的子元素也一样。并且在大部分的现代浏览器中，也确实是这样的。\",\r\n      \"但是在那个浏览器大战的血腥年代里，这种情况就未必会发生，那时候对标准的支持并不是企业的优先选择。比方说，Netscape 4 就不支持继承，它不仅忽略继承，而且也忽略应用于 body 元素的规则。IE/Windows 直到 IE6 还存在相关的问题，在表格内的字体样式会被忽略。我们又该如何是好呢？\",\r\n      \" \",\r\n      \"友善地对待Netscape 4\",\r\n      \"幸运地是，你可以通过使用我们称为 'Be Kind to Netscape 4' 的冗余法则来处理旧式浏览器无法理解继承的问题。\",\r\n      \"body  {\",\r\n      \"  font-family: Verdana, sans-serif;\",\r\n      \"}\",\r\n      \"p, td, ul, ol, li, dl, dt, dd  {\",\r\n      \"  font-family: Verdana, sans-serif;\",\r\n      \"}\",\r\n      \"4.0 浏览器无法理解继承，不过他们可以理解组选择器。这么做虽然会浪费一些用户的带宽，但是如果需要对 Netscape 4 用户进行支持，就不得不这么做。\",\r\n      \" \",\r\n      \"继承是一个诅咒吗？\",\r\n      \"如果你不希望 'Verdana, sans-serif' 字体被所有的子元素继承，又该怎么做呢？比方说，你希望段落的字体是 Times。没问题。创建一个针对 p 的特殊规则，这样它就会摆脱父元素的规则：\",\r\n      \"body  {\",\r\n      \"  font-family: Verdana, sans-serif;\",\r\n      \"}\",\r\n      \"td, ul, ol, ul, li, dl, dt, dd  {\",\r\n      \"  font-family: Verdana, sans-serif;\",\r\n      \"}\",\r\n      \"p  {\",\r\n      \"  font-family: Times, 'Times New Roman', serif;\",\r\n      \"}\",\r\n      \"-->\"\r\n    ];\r\n  },\r\n  methods: {}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/CSS/css_syntax_pro.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('css-code',{attrs:{\"html\":_vm.html}},[_c('div')])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2ca7dbc6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/CSS/css_syntax_pro.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2ca7dbc6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./css_syntax_pro.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./css_syntax_pro.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./css_syntax_pro.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2ca7dbc6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./css_syntax_pro.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2ca7dbc6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/CSS/css_syntax_pro.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}